Git From Basic to Advanced level:

Git commands-

1- For making username as a global 
	"git config --global user.name "Fazal Mahmood"

   To check who you are:
	"git config user.name"

2- For making email as a global
	"git config --global user.name "fazal.mahmood@example.com"

   To check the global useremail
	"git config user.email"

3- To change the default text-editor
	"git config --global core.editor "c:/Program Files/Notepad++/notepad++.exe" "
                        	or you can give the path of any editor in the "notepad"
		or
	git config core.editor "'C:\Program Files (x86)\Notepad++\notepad++.exe' -multiInst -notabbar -nosession -noPlugin"

    
   To make VS code as our default editor:
	git config core.editor "code -w"



4- For initializing local repo
	"git init"

5- To check the untracked and tracked files in local repo.
	"git status"
      	"git status -s" (short format)
	"git status -h or --help" (for geting all the options we can use in git status command)

6- To add untracked files in local repo.
	"git add <file_name>"

   To add all files at onece :
	"git add ."

   To add files of a certain extention:
	"git add *.java"

7- To commit files with a message:
	"git commit -m "your message"

   To add and commit a file together:
	"git commit -a -m "your message"

8- To remove from your git staging area but it will be present in the directory:
	"git rm --cached <file_name>
	note: --cached flag is very important as if we dont use it in our command the file will be removed from both the git staging area as well as from our directory.

    To remove many files(these files will be in another sub-directory) at once from git staging area:
	"git rm -r --cached <directory/>

9- To use .gitignore file to stop any files to be added in your git staging area:
	"touch .gitignore" (it will create a .gitignorefile"
	"nano .gitignore" (add the file names which you dont want to add in your git staging area)

10- To see the commit history:
	"git log" 

    To see only recent two commit history"
	"git log -2"
	
    To see log's message in one line:
	"git log --pretty=oneline"


11- To make an update in your last commit message:
	"git commit --amend" (your default editor will open and you have to update your commit message and save the file)